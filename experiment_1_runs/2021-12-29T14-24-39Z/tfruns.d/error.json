{
  "message": "ValueError: Unknown metric function:precision",
  "traceback": ["py_call_impl(callable, dots$args, dots$keywords)", "(structure(function (...) \n{\n    dots <- py_resolve_dots(list(...))\n    result <- py_call_impl(callable, dots$args, dots$keywords)\n    if (convert) \n        result <- py_to_r(result)\n    if (is.null(result)) \n        invisible(result)\n    else result\n}, class = c(\"python.builtin.method\", \"python.builtin.object\"\n), py_object = <environment>))(optimizer = \"adam\", loss = \"categorical_crossentropy\", \n    metrics = list(\"accuracy\", \"precision\", \"recall\", \"AUC\"))", "do.call(object$compile, args)", "compile.keras.engine.training.Model(., loss = \"categorical_crossentropy\", \n    optimizer = \"adam\", metrics = c(\"accuracy\", \"precision\", \n        \"recall\", \"AUC\"))", "compile(., loss = \"categorical_crossentropy\", optimizer = \"adam\", \n    metrics = c(\"accuracy\", \"precision\", \"recall\", \"AUC\"))", "model %>% compile(loss = \"categorical_crossentropy\", optimizer = \"adam\", \n    metrics = c(\"accuracy\", \"precision\", \"recall\", \"AUC\"))", "eval(ei, envir)", "eval(ei, envir)", "withVisible(eval(ei, envir))", "tuning_run(\"experiment_1.R\", flags = list(batch_size = c(5, 10), \n    epochs = c(3, 5), dense_units = c(32)))"]
}
